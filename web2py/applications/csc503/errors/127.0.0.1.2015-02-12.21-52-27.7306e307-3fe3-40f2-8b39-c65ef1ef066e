(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Table' object has no attribute 'simulation_plot'"
p3
sS'layer'
p4
S'/home/ebratt/PycharmProjects/csc503/web2py/applications/csc503/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - api is an example of Hypermedia API support and access control\n#########################################################################\n\nfrom plugin_tablescope import TableScope\nfrom plugin_solidtable import SOLIDTABLE, OrderbySelector\n\n@auth.requires_login()\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n\n    # build the SOLIDTABLE\n    orderby_selector = OrderbySelector([~db.simulation.simulation_date])\n    # dataset = db(db.simulation.simulation_owner==auth.user)\n    dataset = db((db.simulation.id==db.simulation_log.simulation) & (db.simulation.id==db.simulation_plot.simulation) & (db.simulation.simulation_owner == auth.user))\n    scope = TableScope(dataset, db.simulation.algorithm, renderstyle=True)\n    rows = scope.scoped_dataset.select(db.simulation.simulation_date,\n                                       db.simulation.algorithm,\n                                       db.simulation.input_data,\n                                       db.simulation.simulation_result,\n                                       db.simulation_log.log_content,\n                                       db.simulation_plot.simulation_plot,\n                                       orderby=orderby_selector.orderby())\n    headers = {\'simulation.simulation_date\': {\'selected\': True},\n               \'simulation.algorithm\': {\'selected\': False},\n               \'simulation.input_data\': {\'selected\': False},\n               \'simulation.simulation_result\': {\'selected\': False}\n    }\n    extracolumns = [{\'label\': A(\'simulation_log\', _href=\'#\'),\n                     \'content\': lambda row, rc: A(\'simulation_log\', _href=\'download/%s\' % row.simulation_log.log_content)},\n                    {\'label\': A(\'simulation_plot\', _href=\'#\'),\n                     \'content\': lambda row, rc: A(\'simulation_plot\', _href=\'download/%s\' % row.simulation_plot.simulation_plot)},\n                    ]\n    columns = [db.simulation.simulation_date,\n               db.simulation.algorithm,\n               db.simulation.input_data,\n               db.simulation.simulation_result, extracolumns[0]]\n    table = SOLIDTABLE(rows,\n                       columns=columns,\n                       extracolumns=extracolumns,\n                       headers=headers,\n                       orderby=orderby_selector,\n                       renderstyle=True)\n    return dict(sample_1=dict(table=table, scope=scope))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_login() \ndef api():\n    """\n    this is example of API with access control\n    WEB2PY provides Hypermedia API (Collection+JSON) Experimental\n    """\n    from gluon.contrib.hypermedia import Collection\n    rules = {\n        \'<tablename>\': {\'GET\':{},\'POST\':{},\'PUT\':{},\'DELETE\':{}},\n        }\n    return Collection(db).process(request,response,rules)\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/ebratt/PycharmProjects/csc503/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/home/ebratt/PycharmProjects/csc503/web2py/applications/csc503/controllers/default.py", line 109, in <module>\n  File "/home/ebratt/PycharmProjects/csc503/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/ebratt/PycharmProjects/csc503/web2py/gluon/tools.py", line 3444, in f\n    return action(*a, **b)\n  File "/home/ebratt/PycharmProjects/csc503/web2py/applications/csc503/controllers/default.py", line 35, in index\n    db.simulation_plot.simulation_plot,\n  File "/home/ebratt/PycharmProjects/csc503/web2py/gluon/dal/objects.py", line 516, in __getitem__\n    return ogetattr(self, str(key))\nAttributeError: \'Table\' object has no attribute \'simulation_plot\'\n'
p11
s.